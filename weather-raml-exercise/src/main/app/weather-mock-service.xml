<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <ws:consumer-config name="Mock_Mule_Web_Service_Consumer" service="GlobalWeatherServiceService" port="GlobalWeatherServicePort" serviceAddress="http://localhost:63081/globalweatherservice" wsdlLocation="http://localhost:63081/globalweatherservice?wsdl" doc:name="Web Service Consumer"/>
    <flow name="weather-mock-serviceFlow">
        <dw:transform-message doc:name="Set SOAP Request" metadata:id="eb180dd8-f21f-4e24-9a0c-99962ffa8a3e">
            <dw:input-variable doc:sample="sample_data/string.dwl" mimeType="application/java" variableName="city"/>
            <dw:input-variable doc:sample="sample_data/string_1.dwl" mimeType="application/java" variableName="country"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://www.webserviceX.NET
%namespace ns01 http://weather.com/
---
{
	ns01#getWeather: {
		arg0: flowVars.city,
		arg1: flowVars.country
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <ws:consumer config-ref="Mock_Mule_Web_Service_Consumer" operation="getWeather" doc:name="Weather Web Service Consumer"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="21020066-2069-4d42-9168-f5f3a0334603">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%namespace ns0 http://weather.com/
---
{
	data: {
		country: payload.ns0#getWeatherResponse.return.country,
		city: payload.ns0#getWeatherResponse.return.city,
		temprature: payload.ns0#getWeatherResponse.return.temprature as :string,
		unit: payload.ns0#getWeatherResponse.return.unit
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <choice-exception-strategy doc:name="Choice Exception Strategy">
            <catch-exception-strategy when="#[exception.causedBy(java.lang.Exception)]" doc:name="Exception Strategy For General Exception">
                <set-variable variableName="errMsg" value="#[exception.message.toString()]" doc:name="set Error message"/>
                <set-property propertyName="http.status" value="&quot;500&quot;" doc:name="Set Http Status"/>
                <set-property propertyName="http.reason" value="&quot;Unknown Error&quot;" doc:name="Set HTTP Reason"/>
                <dw:transform-message doc:name="Transform Error To JSON" metadata:id="5c4b0eac-097b-4d03-8d6c-2807b3cad244">
                    <dw:input-variable mimeType="application/java" variableName="errMsg"/>
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	error: {
		errorMessage: "Unknown Error Occurred",
		errorDescription: flowVars.errMsg
	}
}]]></dw:set-payload>
                </dw:transform-message>
            </catch-exception-strategy>
        </choice-exception-strategy>
    </flow>
</mule>
